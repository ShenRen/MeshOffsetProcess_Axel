// /////////////////////////////////////////////////////////////////
// Generated by axel-plugin wizard
// /////////////////////////////////////////////////////////////////

/* (C) MyCompany */


/* Put a short description of your plugin here */

/* MyCompany-contact@mycompany.com-http://www.mycompany.com */

#include "MyPluginDefaultData.h"
#include "MyPluginDefaultDataCreatorProcessDialog.h"
#include "MyPluginPlugin.h"

#include <axlCore/axlAbstractProcess.h>

#include <dtkCore/dtkAbstractProcessFactory.h>
#include <dtkCore/dtkAbstractDataFactory.h>
#include <dtkLog/dtkLog.h>
#include <dtkGui/dtkColorButton.h>

#include <QtGui>


class MyPluginDefaultDataCreatorProcessDialogPrivate {
public:
    QSlider *sliderOpacity;
    dtkColorButton *colorButton;
};

MyPluginDefaultDataCreatorProcessDialog::MyPluginDefaultDataCreatorProcessDialog(QWidget* parent) :
    axlInspectorToolInterface(parent),
    d(new MyPluginDefaultDataCreatorProcessDialogPrivate) {
    
    int qLineEditWidth = 200;
    
    //OPACITY//
    d->sliderOpacity = new QSlider(Qt::Horizontal, this);
    
    QHBoxLayout *layoutOpacity = new QHBoxLayout;
    layoutOpacity->addWidget(new QLabel("Opacity",this));
    layoutOpacity->addWidget(d->sliderOpacity);
    d->sliderOpacity->setMaximum(100);
    
    //COLOR//
    d->colorButton = new dtkColorButton(this);
    
    QHBoxLayout *layoutColorButton = new QHBoxLayout;
    layoutColorButton->addWidget(new QLabel("Color",this));
    layoutColorButton->addWidget(d->colorButton);
    d->colorButton->setColor(QColor("green"));
    
    //RUN BUTTON//
    QPushButton* createButton = new QPushButton("Create", this);
    connect(createButton, SIGNAL(clicked()), this, SLOT(run()));
    
    //LAYOUTS//
    QVBoxLayout* mainLayout = new QVBoxLayout(this);
    mainLayout->addWidget(new QLabel("MyPluginDefaultDataCreatorProcessDialog"));
    mainLayout->addLayout(layoutOpacity);
    mainLayout->addLayout(layoutColorButton);
    mainLayout->addWidget(createButton);
}

MyPluginDefaultDataCreatorProcessDialog::~MyPluginDefaultDataCreatorProcessDialog() {
    delete d;
    d = NULL;
}

bool MyPluginDefaultDataCreatorProcessDialog::registered(void) {
    MyPluginPlugin::processFactSingleton->registerProcessType("axlCreateMyPluginDefault", createProcessCreatorMyPluginDefaultData, "axlAbstractCreator");
    return axlInspectorToolFactory::instance()->registerInspectorTool("axlCreateMyPluginDefault", createMyPluginDefaultDataCreatorProcessDialog);
}

void MyPluginDefaultDataCreatorProcessDialog::run(void) {
    // TODO: Create your new data using the GUI
    MyPluginDefaultData* myData = new MyPluginDefaultData();
    
    
    myData->setColor(d->colorButton->color());
    double opacity = 1.0 - 0.01 * d->sliderOpacity->value();
    myData->setOpacity(opacity);
    
    emit dataInserted(myData);
}


dtkAbstractProcess* createProcessCreatorMyPluginDefaultData(void) {
    axlAbstractProcess* process = new axlAbstractProcess;
    process->setDescription("processCreatorMyPluginDefault create a new MyPluginDefaultData");
    process->setIdentifier("processCreatorMyPluginDefault");
    
    return process; // to pass the factory
}

axlInspectorToolInterface* createMyPluginDefaultDataCreatorProcessDialog(void) {
    return new MyPluginDefaultDataCreatorProcessDialog;
}

