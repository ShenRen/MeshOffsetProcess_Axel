// /////////////////////////////////////////////////////////////////
// Generated by axel-plugin wizard
// /////////////////////////////////////////////////////////////////

/* (C) MyCompany */


/* Put a short description of your plugin here */

/* MyCompany-contact@mycompany.com-http://www.mycompany.com */

#include "MyPluginDefaultDataWriter.h"

#include "MyPluginDefaultData.h"
#include "MyPluginPlugin.h"

#include <dtkCore/dtkAbstractData.h>
#include <dtkCore/dtkAbstractDataFactory.h>

// /////////////////////////////////////////////////////////////////
// MyPluginDefaultDataWriter
// /////////////////////////////////////////////////////////////////

MyPluginDefaultDataWriter::MyPluginDefaultDataWriter(void)
{
    
}

MyPluginDefaultDataWriter::~MyPluginDefaultDataWriter(void)
{
    
}

QString MyPluginDefaultDataWriter::identifier(void) const
{
    return "MyPluginDefaultDataWriter";
}

QString MyPluginDefaultDataWriter::description(void) const
{
    return "MyPluginDefaultDataWriter";
}

QStringList MyPluginDefaultDataWriter::handled(void) const
{
    return QStringList() << "MyPluginDefaultData";
}

bool MyPluginDefaultDataWriter::registered(void)
{
    return MyPluginPlugin::dataFactSingleton->registerDataWriterType("MyPluginDefaultDataWriter", QStringList(), createMyPluginDefaultDataWriter);
}

bool MyPluginDefaultDataWriter::accept(dtkAbstractData *data)
{
    MyPluginDefaultData *pluginData = dynamic_cast<MyPluginDefaultData *>(data);
    if(pluginData)
        return true;
    
    return false;
}

bool MyPluginDefaultDataWriter::reject(dtkAbstractData *data)
{
    return !this->accept(data);
}

QDomElement MyPluginDefaultDataWriter::write(QDomDocument *doc, dtkAbstractData *data)
{
    //TODO : Replace MyPluginDefaultData by your new data type and write into the QDomElement its description
    MyPluginDefaultData *myData = dynamic_cast<MyPluginDefaultData *>(data); 
    
    QDomElement myDataElement =  doc->createElement("MyPluginDefaultDataTag");
    
    return myDataElement;
}


dtkAbstractDataWriter *createMyPluginDefaultDataWriter(void)
{
    return new MyPluginDefaultDataWriter;
}

