// /////////////////////////////////////////////////////////////////
// Generated by axel-plugin wizard
// /////////////////////////////////////////////////////////////////

/* (C) MyCompany */


/* Put a short description of your plugin here */

/* MyCompany-contact@mycompany.com-http://www.mycompany.com */

#include "MyPluginDefaultProcessDialog.h"

#include <axlCore/axlAbstractData.h>
#include <axlCore/axlMesh.h>
#include <axlCore/axlPoint.h>

#include <axlGui/axlInspectorObjectController.h>
#include <axlGui/axlInspectorObjectManagerTreeItem.h>

#include <dtkCore/dtkAbstractProcessFactory.h>
#include <dtkCore/dtkAbstractProcess.h>

#include <QtGui>

class MyPluginDefaultProcessDialogPrivate
{
	public:
		QLabel* wrongNumberErrorMessage;
		QLabel* wrongTypeErrorMessage;

		dtkAbstractProcess *process;
		axlInspectorObjectController *controller;

		QDoubleSpinBox *spinBoxOffsetParameter;
    
};

MyPluginDefaultProcessDialog::MyPluginDefaultProcessDialog(QWidget *parent) : axlInspectorToolInterface(parent), d(new MyPluginDefaultProcessDialogPrivate)
{
    QString advice = "Please select a BSpline Surface and retry.";

    d->wrongNumberErrorMessage = new QLabel("Number of selected objects error.\n"+advice);
    d->wrongNumberErrorMessage->setStyleSheet("color: #ff0000;");
    d->wrongNumberErrorMessage->setVisible(false);

    d->wrongTypeErrorMessage = new QLabel("Object type error.\n"+advice);
    d->wrongTypeErrorMessage->setStyleSheet("color: #ff0000;");
    d->wrongTypeErrorMessage->setVisible(false);

    QVBoxLayout *layout = new QVBoxLayout(this);
    
    QHBoxLayout *layoutOffsetParameter = new QHBoxLayout();
    QLabel *labelOffsetParameter = new QLabel("OffsetParameter",this);
    d->spinBoxOffsetParameter = new QDoubleSpinBox(this);
    d->spinBoxOffsetParameter->setMaximum(10000);
    d->spinBoxOffsetParameter->setMinimum(-1000);
    d->spinBoxOffsetParameter->setValue(0.0);
    layoutOffsetParameter->addWidget(labelOffsetParameter);
    layoutOffsetParameter->addWidget(d->spinBoxOffsetParameter);

    QPushButton *button = new QPushButton("Run", this);
    connect(button, SIGNAL(clicked()), this, SLOT(run()));
    
    layout->addWidget(new QLabel("MyPluginDefaultProcessDialog", this));
	layout->addWidget(d->wrongNumberErrorMessage);
    layout->addWidget(d->wrongTypeErrorMessage);
    layout->addLayout(layoutOffsetParameter);
    layout->addWidget(button);
}

MyPluginDefaultProcessDialog::~MyPluginDefaultProcessDialog(void)
{
    delete d;
    
    d = NULL;
}

bool MyPluginDefaultProcessDialog::registered(void)
{
    return axlInspectorToolFactory::instance()->registerInspectorTool("MyPluginDefaultProcess", createMyPluginDefaultProcessDialogPrivate);
}



void MyPluginDefaultProcessDialog::run(void)
{
    dtkAbstractData *input1 = NULL;
    /*axlAbstractData *input2 = NULL;*/
    int numberOfDataSelected =0;
    
    foreach(axlInspectorObjectManagerTreeItem *item, m_controller->items()) 
	{
        
        if(item->text(2) == "Selected")
        {
            dtkAbstractData *cData = m_controller->data(item);
			if(axlMesh *mesh = dynamic_cast<axlMesh *>(cData)) 
			 {
                if(input1 == NULL)
                     input1 = mesh;
           /* if(numberOfDataSelected == 1)
                input2 = dynamic_cast<axlAbstractData *>(m_controller->data(item));*/
            
                numberOfDataSelected++;
             }
		   else 
		     {
                d->wrongTypeErrorMessage->setVisible(true);
                return;
              }
	    }
	}
    
    
    if(numberOfDataSelected == 1 && input1!=NULL /*&& input2*/)
    {
        m_process->setInput(input1,0);
		axlPoint *p = new axlPoint();
        m_process->setInput(p, 1);
		m_process->setParameter(d->spinBoxOffsetParameter->value());
        /*m_process->setInput(input2,1);*/
        m_process->run();
		delete p;
        if(axlAbstractData *axldata = dynamic_cast<axlAbstractData *>(m_process->output()))
            emit dataInserted(axldata);
    //} else {
    //    // In the case where not input is selected, we still run the process because in this
        // example the input data are not used.
        // But a error message should be sent.
        /*m_process->run();
        if(axlAbstractData *axldata = dynamic_cast<axlAbstractData *>(m_process->output()))
            emit dataInserted(axldata);*/
    }
	else 
	{
        d->wrongNumberErrorMessage->setVisible(true);
        return;
    }

}

axlInspectorToolInterface *createMyPluginDefaultProcessDialogPrivate(void)
{
    return new MyPluginDefaultProcessDialog;
}


