// /////////////////////////////////////////////////////////////////
// Generated by axel-plugin wizard
// /////////////////////////////////////////////////////////////////

/* (C) MyCompany */


/* Put a short description of your plugin here */

/* MyCompany-contact@mycompany.com-http://www.mycompany.com */

#ifndef MYPLUGINPLUGIN_H
#define MYPLUGINPLUGIN_H

#include <dtkCore/dtkPlugin.h>

#include "MyPluginPluginExport.h"

class dtkAbstractDataFactory;
class dtkAbstractProcessFactory;

class MyPluginPluginPrivate;

class MYPLUGINPLUGIN_EXPORT MyPluginPlugin : public dtkPlugin
{
    Q_OBJECT
    Q_INTERFACES(dtkPlugin)
    
public:
    MyPluginPlugin(QObject *parent = 0);
    ~MyPluginPlugin(void);
    
    virtual bool initialize(void);
    virtual bool uninitialize(void);
    
    virtual QString name(void) const;
    virtual QString description(void) const;
    
    virtual QStringList tags(void) const;
    virtual QStringList types(void) const;
    
public:
    static dtkAbstractDataFactory *dataFactSingleton;
    static dtkAbstractProcessFactory *processFactSingleton;
    
    
private:
    MyPluginPluginPrivate *d;
};

#endif //MYPLUGINPLUGIN_H

