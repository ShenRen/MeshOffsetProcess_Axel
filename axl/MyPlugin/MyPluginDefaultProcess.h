// /////////////////////////////////////////////////////////////////
// Generated by axel-plugin wizard
// /////////////////////////////////////////////////////////////////

/* (C) MyCompany */


/* Put a short description of your plugin here */

/* MyCompany-contact@mycompany.com-http://www.mycompany.com */
#ifndef MYPLUGINDEFAULTPROCESS_H
#define MYPLUGINDEFAULTPROCESS_H

#include "MyPluginPluginExport.h"

#include <dtkCore/dtkAbstractProcess.h>

class axlAbstractData;

class MyPluginDefaultProcessPrivate;

class MYPLUGINPLUGIN_EXPORT MyPluginDefaultProcess: public dtkAbstractProcess
{
    Q_OBJECT
    
public:
    MyPluginDefaultProcess(void);
    virtual ~MyPluginDefaultProcess(void);
    
    virtual QString description(void) const;
    virtual QString identifier(void) const;
    
    virtual QString form (void) const;
    
public:
    static bool registered(void);
    
public:
    dtkAbstractData *output(void);
	QVector3D normal_temp(double thr_p0,double thr_p1,double thr_p2,double thr_p3,double thr_p4,double thr_p5,double thr_p6,double thr_p7,double thr_p8);
    QVector3D Intersection(QVector3D A,QVector3D u,QVector3D U, QVector3D v);
	QVector3D Point_distance(QVector3D N,QVector3D p_plane,qreal dt);
public slots:
    void setInput(dtkAbstractData *data, int channel);
	void setParameter(double a);
    
public slots:
    int update(void);
    
private:
    MyPluginDefaultProcessPrivate *d;
};

dtkAbstractProcess *createMyPluginDefaultProcess(void);

#endif //MYPLUGINDEFAULTPROCESS_H

